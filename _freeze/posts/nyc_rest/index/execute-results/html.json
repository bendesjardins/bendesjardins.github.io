{
  "hash": "4d5ffad756b6c600e7610985c362874a",
  "result": {
    "markdown": "---\ntitle: \"NYC Restaurant Inspection\"\nauthor: \"Benjamin DesJardins\"\ndate: \"2023-12-11\"\ncategories: [news]\n---\n\n\nAnalyze the `DOHMH_NYC_Restaurant_Inspection.csv` data.\n\n![](thumbnail.jpg)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.2     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.3     ✔ tibble    3.2.1\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n:::\n\n```{.r .cell-code}\nlibrary(skimr)\nrestaurant <- \n  read_csv('https://bcdanl.github.io/data/DOHMH_NYC_Restaurant_Inspection.csv')\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nRows: 17633 Columns: 12\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (10): DBA, BORO, STREET, CUISINE DESCRIPTION, INSPECTION DATE, ACTION, V...\ndbl  (2): CAMIS, SCORE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n:::\n\n\n#Q1a) \nWhat are the mean, standard deviation, first quartile, median, third quartile, and maximum of SCORE for each GRADE of restaurants?\n\n\n::: {.cell}\n\n```{.r .cell-code}\nscorePerGrade <- restaurant %>% \n  group_by(restaurant$GRADE) %>%\n  summarize(\n    score_mean = mean(SCORE),\n    score_sd = sd(SCORE),\n    score_min = min(SCORE),\n    score_q1 = quantile(SCORE, probs = .25),\n    score_median = median(SCORE),\n    score_q1 = quantile(SCORE, probs = .75),\n    score_max = max(SCORE) )\n```\n:::\n\n\n#Q1b) \nHow many restaurants with a GRADE of A are there in NYC? How much percentage of restaurants in NYC are a GRADE of C?\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnumObs <- restaurant %>% \n  group_by(GRADE) %>% \n  summarize( number = n())\n```\n:::\n\n\n16305 with a grade of A\n\n\n::: {.cell}\n\n```{.r .cell-code}\n294 / sum(numObs$number) * 100 \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 1.667328\n```\n:::\n:::\n\n\nPercentage with grade C\n\n#Q1c) \n\nProvide both (1) ggplot code and (2) a simple comment to describe how the distribution of SCORE varies by GRADE and CRITICAL FLAG.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot( data = restaurant) +\n  geom_histogram(aes(x = SCORE, fill = restaurant$`CRITICAL FLAG`), bins = 50) +\n  facet_grid(. ~ GRADE)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\nCritical makes up the majority of each grade, and those with the grade A\nhas the highest and most varied scores, those with grade C have much larger\nscores\n\n#Q1d) \nProvide both (1) ggplot code and (2) a simple comment to describe how the \nproportion of CRITICAL FLAG varies by GRADE and BORO.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = restaurant) + \n  geom_bar(aes(x = GRADE, fill = BORO)) +\n  facet_wrap(. ~ `CRITICAL FLAG`)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\nStaten Island and Bronx make up the smallest proportions of boroughs.  \nManhattan makes up the largest proportion of each grade. \nCritical and Not Critical have very similar distributions.\n\n#Q1e) \nFor the 10 most common CUISINE DESCRIPTION values, find the CUISINE \nDESCRIPTION value that has the highest proportion of GRADE A.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncuiseDescrip <-  restaurant %>% \n  group_by(`CUISINE DESCRIPTION`) %>%\n  summarise(count = n()) %>% \n  arrange(-count) %>% \n  mutate()\n\nhead(cuiseDescrip, 10)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 10 × 2\n   `CUISINE DESCRIPTION`    count\n   <chr>                    <int>\n 1 American                  3678\n 2 Coffee/Tea                1414\n 3 Chinese                   1372\n 4 Pizza                     1050\n 5 Italian                    689\n 6 Bakery Products/Desserts   615\n 7 Japanese                   584\n 8 Mexican                    582\n 9 Latin American             544\n10 Donuts                     505\n```\n:::\n:::\n\n\n#Q1f) \nFind the 3 most common names of restaurants (DBA) in each BORO.\nIf the third most common DBA values are multiple, please include all \nthe DBA values.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nq2f <- restaurant %>% \n  select(DBA, BORO) %>% \n  group_by(BORO, DBA) %>% \n  summarize(n = n()) %>% \n  mutate(ranking = dense_rank(-n)) %>% \n  filter(ranking <= 3) %>% \n  arrange(BORO, ranking)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`summarise()` has grouped output by 'BORO'. You can override using the\n`.groups` argument.\n```\n:::\n\n```{.r .cell-code}\nq2f_ <- restaurant %>% \n  group_by(DBA) %>% \n  count() %>% \n  arrange(-n)\n```\n:::\n\n\n#Q1g) \nFor all the DBA values that appear in the result of Q1f, find the DBA \nvalue that is most likely to commit critical violation.\n\n::: {.cell}\n\n```{.r .cell-code}\nq2g <- restaurant %>% \n  filter(DBA %in% q2f$DBA) %>% \n  group_by(DBA, `CRITICAL FLAG`) %>% \n  count() %>% \n  group_by(DBA) %>% \n  mutate(lag_n = lag(n),\n         tot = sum(n),\n         prop_crit = lag_n / tot) %>% \n  select(DBA, prop_crit) %>% \n  filter(!is.na(prop_crit)) %>% \n  arrange(-prop_crit)\n```\n:::",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}